# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    always_declare_return_types: true
    always_require_non_null_named_parameters: true
    avoid_print: true
    avoid_empty_else: true
    avoid_relative_lib_imports: true
    avoid_renaming_method_parameters: true
    camel_case_types: true
    constant_identifier_names: true
    empty_catches: true
    library_names: true
    no_duplicate_case_values: true
    non_constant_identifier_names: true
    prefer_const_constructors: true
    prefer_const_declarations: true
    prefer_final_fields: true
    prefer_final_locals: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    prefer_single_quotes: true
    always_use_package_imports: true
    avoid_unnecessary_containers: true
    prefer_const_literals_to_create_immutables: true
    unnecessary_this: true
    use_key_in_widget_constructors: true
    avoid_redundant_argument_values: true
    avoid_return_types_on_setters: true
    avoid_void_async: true
    await_only_futures: true
    curly_braces_in_flow_control_structures: true
    no_logic_in_create_state: true
    prefer_foreach: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_spread_collections: true
    sized_box_for_whitespace: true
    type_annotate_public_apis: true
    unnecessary_await_in_return: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_checks: true
    unnecessary_parenthesis: true
    unnecessary_statements: true
    use_build_context_synchronously: true
    use_decorated_box: true
    use_full_hex_values_for_flutter_colors: true
    use_late_for_private_fields_and_variables: true
    use_named_constants: true
    use_rethrow_when_possible: true
    use_setters_to_change_properties: true
    use_string_buffers: true
    use_super_parameters: true
    use_to_and_as_if_applicable: true

analyzer:
  errors:
    unused_import: warning
    dead_code: warning
    missing_return: error
    invalid_assignment: error
    undefined_class: error
    undefined_method: error
    undefined_identifier: error
    unnecessary_cast: warning
    unused_local_variable: warning
    unused_element: warning
    unused_field: warning
    unused_label: warning
    unused_catch_clause: warning
    unused_catch_stack: warning
    unnecessary_new: warning
    unnecessary_const: warning
    unnecessary_late: warning
    unnecessary_this: warning
    unnecessary_parenthesis: warning
    unnecessary_statements: warning
    unnecessary_null_aware_assignments: warning
    unnecessary_null_checks: warning
    unnecessary_await_in_return: warning
    
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule


# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options